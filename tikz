#! /usr/bin/env bash
#
# https://tex.stackexchange.com/questions/1460/script-to-automate-externalizing-tikz-graphics#1475
# https://tex.stackexchange.com/questions/83992/how-to-create-and-include-tikz-files-in-your-manuscript
# https://stackoverflow.com/questions/2701902/standalone-diagrams-with-tikz
# http://www.hackenberger.at/blog/ktikz-editor-for-the-tikz-language/
#
#
# Additional code can be passed as follows:
#
#   tikz -i <(echo '\let\code\lstinline') example.tikz
#
#
# TODO
# * Provide option use different output directory
# * Provide option to enable grid (maybe implement as overlay?)
#

display() {
	local file=$1

	while read -r line; do
		echo $line
	done
}

compile() {
	local file=$1

	if [ ! -f "$file" ]; then
		echo "File does not exist: $1" >&2
		exit 1
	fi

	local name=${file%.tikz}
	mkdir -p "$name"

	pdflatex -jobname "$name" -output-directory "$name"
}

class='standalone'
classopts='tikz,border=0.5cm'
packages=()
tikzlibs=()
inputs=()
action=compile
while getopts 'c:C:p:l:i:d' opt; do
	case "$opt" in
		c)
			class=$OPTARG
			classopts=
			packages+=( $'\n'"\\usepackage{tikz}" )
			;;
		C)
			classopts=$OPTARG
			;;
		p)
			packages+=( $'\n'"\\usepackage{$OPTARG}" )
			;;
		l)
			tikzlibs+=( $'\n'"\\usetikzlibrary{$OPTARG}" )
			;;
		i)
			inputs+=( $'\n'"\\input{$OPTARG}" )
			;;
		d)
			action=display
			;;
		h|\?)
			echo "usage: $(basename "$0")" \
				"[-c documentclass [-C classoptions]]" \
				"[-p package]" \
				"[-l tikzlibrary]" \
				"[-i \input]" \
				"[-d]" \
				"<file>.tikz"
			exit
			;;
	esac
done
shift $((OPTIND -1))

$action $1 <<LATEX
\documentclass[$classopts]{$class}
${packages[@]}
${tikzlibs[@]}
${inputs[@]}
\begin{document}
	\input{$1}
\end{document}
LATEX

